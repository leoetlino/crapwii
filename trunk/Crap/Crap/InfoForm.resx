<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="txtInfo.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <data name="txtInfo.Text" xml:space="preserve">
    <value>Notes regarding the program
---------------------------------------------------------------------
You should have common-key in the shared folder in order
to use this program. After you selected Extract as channel
option in custom Wii Scrubber, this program will launch.

If you have the banner already, click the ellipsis button next to 
label banner and select a banner file. Banner file should end with
the disc id. Say for Wii sports it can be, Wii Sports-RSPE01.bnr, 
RSPE01.bnr, BlahBlah-RSPE01.bnr or similar. The key is in the 
ending.

If you want to create lots of channels for lots of banners then 
simply grab them all from an explorer page and drop it to the 
program window. Batch mode will be activated and with the 
selection of loader and options you can create channels for all
the banners with a single click.

Along with version 1.5, I reorganized the folders used. 
Here is a brief information about them :

Loaders (loaders reside here, if you want to add one, just copy here
and modify Crap.cfg in the root folder accordingly..

Muzak (The music you are listening right now stored here)

Shared (common-key should be here)

Wad (Create wads will be stored here)

Temp (Wad unpacking &amp; packing done here)

And in the root folder there is two file you can modify and change 
the behaviour of the program.

1. crap.cfg (all information for loaders stored here, you can 
add/remove/change loaders)

2. base.wad (this wad is used as an host for injection, if you want to
switch to a different wad it's ok. but it should be a homebrew wad)



You should have the libeay32.dll for the program to work...


Credits 
-------------------------------------------------------
WiiCrazy/I.R.on
Segher Boessenkool (this time used 70)
Dack for WiiScrubber
Kwiirk for YAL (Yet another loader)

ps: No separate credits for Loaders bundled in the program

Thanks
-------------------------------------------------------
Joda
Sorg (for the nice reorganization of the usbloader by waninkoko)
Waninkoko
Skh

The muzak you are listening to composed and copyrighted by Jeroen Tel
(http://www.maniacsofnoise.nl/)</value>
  </data>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAQAAQABADoAgAAFgAAACgAAAAgAAAAQAAAAAEABAAAAAAAgAIAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAqAAAAACoAACoqAAAAACoAKgAqAAAVKgAqKioAFRUVAD8VFQAVPxUAPz8VABUVPwA/FT8AFT8
        /AD8/PwAAAAAAAAAC7sLuwAAAAAAAAAAAAAAALuwALuwAAAAAAAAAAAAAAu7ADALuwAAAAAAAAAAAAC7
        uwAwC7uwAAAAAAAAAAALu7sDMwu7uwAAAAAAAAAAu7uwAzMAu7uwAAAAAAAAC7u7sAMzALu7uwAAAAAA
        AAC7u7ADMwC7u7AAAAAAAAAAC7uwMzMwu7sAAAAAAAAAAAC7ADMzMAuwAAAAAAAAAAAACwAzMzALAAAA
        AAAAAAAAAAAAMzMwAAAAAAAAAAAAAAAAAzMzMwAAAAAAAAAAAAAAAAMzMzMAAAAAAAAAAAAAAAADMzMz
        AAAAAAAAAAAAAAAAMzMzMzAAAAAAAAAAAAMAADMzMzMwAAMAAAAAAAAzMAAzMzMzMAAzMAAAAAADMzMA
        MzMzMzADMzMAAAAAMzMzMzMzMzMzMzMzMAAAAAMzMzMzMzMzMzMzMwAAAAAAMzMzMzMzMzMzMzAAAAAA
        AAMzMzMzMzMzMzMAAAAAAAAAMzMzMzMzMzMwAAAAAAAAAAMzMzAAMzMzAAAAAAAAAAAAMzMAAAMzMAAA
        AAAAAAAAAAMwD/8AMwAAAAAAAAAAAAAAAP//8AAAAAAAAAAAAAAAAAD///AAAAAAAAAAAAAAAAAA///w
        AAAAAAAAAAAAAAAAAA//AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
</value>
  </data>
</root>